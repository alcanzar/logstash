require "rubygems"
require File.join(File.dirname(__FILE__), "..", "minitest")

require "logstash/loadlibs"
require "logstash"
require "logstash/filters"
require "logstash/filters/tagger"
require "logstash/event"
require "json"
require "ruby-debug"

describe LogStash::Filters::Tagger do
  before do
    @typename = "metlog"
  end

  def config(cfg)
      # this method is *not* executed automatically
      cfg["type"] = @typename
      cfg['pattern'] = ['logger', "toy2", 42]
      cfg['add_tag'] = ['metlog_dest_bagheera']

      @myconfig = cfg

      @filter = LogStash::Filters::Tagger.new(cfg)
      @filter.register
  end # def config

  test "simple_test" do
      # weird - config {} doesn't seem to work
      config ({})

      event = LogStash::Event.new
      event.type = @typename

      jdata = { timestamp: '2011-10-13T09:43:44.386392',
          metadata: {'some_data' => 'foo' },
          type: 'error',
          logger: 'toy2',
          severity: 0,
          message: 'some log text',
      }

      event["message"] = JSON(jdata).to_s

      @filter.filter(event)

      #assert not event.tags.include? "metlog_dest_bagheera"
      # This event should be tagged as a sentry event
      assert event.tags.include? "metlog_dest_bagheera"
  end # testing a single match

end # TestFilterGrep
