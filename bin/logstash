#!/bin/sh
# Run logstash from source
#
# This is most useful when done from a git checkout.
#
# Usage:
#     bin/logstash <command> [arguments]
#
# See 'bin/logstash help' for a list of commands.
#
# NOTE: One extra command is available 'deps'
# The 'deps' command will install dependencies for logstash.
#
# If you do not have ruby installed, you can set "USE_JRUBY=1"
# in your environment and this script will download and use
# a release of JRuby for you.

basedir=$(cd `dirname $0`/..; pwd)
export RUBYLIB="$basedir/lib"

setup() {
  if [ ! -z "$USE_RUBY" ] ; then
    eval $(ruby -e 'puts "RUBYVER=#{RUBY_VERSION.split(".")[0..1].join(".")}"; puts "RUBY=#{RUBY_ENGINE}"')
  else
    RUBYVER=1.9
    RUBY=jruby
  fi

  export GEM_HOME="$basedir/vendor/bundle/${RUBY}/${RUBYVER}"
  export GEM_PATH=
}

if [ "$1" = "deps" ] ; then
  if [ -f "$basedir/logstash.gemspec" ] ; then
    program="$basedir/gembag.rb"
    set -- "$basedir/logstash.gemspec"
  else
    echo "Cannot install dependencies; missing logstash.gemspec. This 'deps' command only works from a logstash git clone."
  fi
else
  program="$basedir/lib/logstash/runner.rb"
fi

if [ ! -z "$USE_RUBY" ] ; then
  set -- ruby "$program" "$@"
  setup
else
  # No ruby found, fetch JRuby and run.
  jruby="$basedir/vendor/jar/jruby-complete-1.7.5.jar"
  [ ! -f "$jruby" ] && make -C $basedir build-jruby
  set -- java -jar "$jruby" "$program" "$@"
  setup jruby
fi

exec "$@"

